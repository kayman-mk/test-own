---
on:
  repository_dispatch:
    types: 
      - help-command
      - finish-command

jobs:
  main:
    name: Validate PR title
    if: github.event.action == 'help-command'
    runs-on: ubuntu-latest
    steps:
      - name: Determine variables
        id: vars
        run: |
          maintainers=("xx-npalm-xx" "xx-kayman-mk-xx")
          
          RANDOM=$(date +%s)
          
          maintainer=${maintainers[ $RANDOM % ${#maintainers[@]} ]}

          echo "maintainer=$maintainer" >> $GITHUB_OUTPUT
        
      - uses: actions/github-script@v6
        with:
          script: |
            console.log("all")
            console.log(context)
            console.log(".github")
            console.log(context.payload.client_payload.github)
            console.log(".slash_command")
            console.log(context.payload.client_payload.slash_command)
            console.log("repo")
            console.log(context.repo)
            
            // adds a comment to the PR (there is the issue API, which works work PRs too)
            github.rest.issues.createComment({
              issue_number: context.payload.client_payload.github.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Hey there @${{ steps.vars.outputs.maintainer }}, could you please help @${{ github.event.client_payload.github.payload.comment.user.login }} out?'
            })

  finish-command:
    name: "ChatOps: Finish"
    if: github.event.action == 'finish-command'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            console.log("all")
            console.log(context)
            console.log(".github")
            console.log(context.payload.client_payload.github)
            console.log(".slash_command")
            console.log(context.payload.client_payload.slash_command)
            console.log("repo")
            console.log(context.repo)
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: "refs/pull/${{ github.event.client_payload.slash_command.args.named.pull_request_number }}/head"
      - run: |
          git fetch origin "pull/${{ github.event.client_payload.slash_command.args.named.pull_request_number }}/head:${{ github.event.client_payload.slash_command.args.named.branch_name }}"
          git checkout ${{ github.event.client_payload.slash_command.args.named.branch_name }}
          git push -u origin ${{ github.event.client_payload.slash_command.args.named.branch_name }}
      - name: Generate Terraform docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          find-dir: .
          git-commit-message: "docs: update Terraform docs"
          git-push: true

      - uses: hashicorp/setup-terraform@v2.0.3
  
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -write=true -recursive
  
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore: format Terraform code"

      - name: Failure notice
        uses: actions/github-script@v6  
        if: ${{ failure() }}
        with:
          script: |
            // adds a comment to the PR (there is the issue API, which works work PRs too)
            github.rest.issues.createComment({
              issue_number: context.payload.client_payload.github.payload.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The `/finish` action failed. Please check!'
            })
